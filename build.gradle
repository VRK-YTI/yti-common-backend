plugins {
    id "idea"
    id "java"
    id "maven-publish"
    id "com.jfrog.artifactory" version "4.33.1"
    id "pl.allegro.tech.build.axion-release" version "1.17.0"
}

project.version = "1.0.0-SNAPSHOT"

repositories {
    mavenLocal()
    mavenCentral {
        content { excludeGroupByRegex "fi\\.vm\\.yti.*" }
    }
    google {
        content { excludeGroupByRegex "fi\\.vm\\.yti.*" }
    }
    jcenter {
        content { excludeGroupByRegex "fi\\.vm\\.yti.*" }
    }

    // put your artifactory parameters to $HOME/.gradle/gradle.properties
    if (project.hasProperty("artifactoryUrl")) {
        maven {
            url "$artifactoryUrl"
            credentials {
                username "$artifactoryUsername"
                password "$artifactoryPassword"
            }
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId "fi.vm.yti"
            artifactId "yti-common-backend"
            version project.version

            artifact jar
        }
    }
}

artifactory {
    publish {
        defaults {
            publications("maven")
            publishArtifacts = true
            publishPom = true
        }
    }
}

sourceCompatibility = 17
targetCompatibility = 17

dependencies {
    implementation "org.springframework:spring-webflux:6.1.4"
    implementation "org.springframework:spring-context:6.1.4"
    implementation "org.springframework.security:spring-security-core:6.1.4"
    implementation "io.projectreactor.netty:reactor-netty-http:1.1.2"
    implementation "org.apache.jena:jena-core:4.10.0"
    implementation "org.apache.jena:jena-arq:4.10.0"
    implementation "org.apache.jena:jena-rdfconnection:4.10.0"
    implementation "org.apache.jena:jena-querybuilder:4.10.0"

    implementation "com.google.guava:guava:33.0.0-jre"

    implementation "fi.vm.yti:yti-spring-security:0.4.0"

    implementation "io.swagger.core.v3:swagger-annotations:2.2.20"

    testImplementation platform("org.junit:junit-bom:5.9.1")
    testImplementation "org.junit.jupiter:junit-jupiter"
}

test {
    useJUnitPlatform()
}